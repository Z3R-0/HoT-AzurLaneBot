// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AzurLaneBBotDbContext))]
    [Migration("20250514211537_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Domain.ShipAggregate.Ship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Rarity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("Domain.SkinAggregate.Skin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CoverageType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CupSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Shape")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ShipId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShipId");

                    b.ToTable("Skins");
                });

            modelBuilder.Entity("Domain.VisualTraitAggregate.SkinVisualTrait", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SkinId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VisualTraitId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SkinId");

                    b.HasIndex("VisualTraitId");

                    b.ToTable("SkinVisualTraits");
                });

            modelBuilder.Entity("Domain.VisualTraitAggregate.VisualTrait", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("TraitType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("VisualTraits");
                });

            modelBuilder.Entity("Domain.SkinAggregate.Skin", b =>
                {
                    b.HasOne("Domain.ShipAggregate.Ship", "Ship")
                        .WithMany("Skins")
                        .HasForeignKey("ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("Domain.VisualTraitAggregate.SkinVisualTrait", b =>
                {
                    b.HasOne("Domain.SkinAggregate.Skin", "Skin")
                        .WithMany()
                        .HasForeignKey("SkinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.VisualTraitAggregate.VisualTrait", "VisualTrait")
                        .WithMany()
                        .HasForeignKey("VisualTraitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skin");

                    b.Navigation("VisualTrait");
                });

            modelBuilder.Entity("Domain.ShipAggregate.Ship", b =>
                {
                    b.Navigation("Skins");
                });
#pragma warning restore 612, 618
        }
    }
}
